{"version":3,"file":"static/js/439.94e2cb43.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/api.js","components/Hero/Hero.styled.jsx","components/Hero/Hero.jsx","pages/Home/Home.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, auto));\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ImgPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding-bottom: 10px;\n  color: ${props => props.theme.colors.white};\n  text-shadow: 1px 2px 0 ${props => props.theme.colors.accent};\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0));\n  text-align: center;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n`;\n\nexport const ErrorWraper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  padding: 2rem;\n`;\n\nexport const ErrorHeader = styled.h2`\n  color: ${props => props.theme.colors.white};\n  text-shadow: 2px 4px 0 ${props => props.theme.colors.accent};\n  font-size: 24px;\n  margin-bottom: 0.5rem;\n`;\n\nexport const ErrorText = styled.p`\n  color: ${props => props.theme.colors.light};\n  font-size: 18px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Section,\n  Container,\n  CardWrapper,\n  ImgPoster,\n  MovieTitle,\n  ErrorWraper,\n  ErrorHeader,\n  ErrorText,\n} from './MoviesList.styled';\n\nimport { IMG_MEDIUM_URL } from 'constants/api';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Section>\n      <Container>\n        {movies &&\n          movies.map(({ id, poster_path, title }) => (\n            <CardWrapper key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <ImgPoster\n                  src={\n                    poster_path\n                      ? `${IMG_MEDIUM_URL}${poster_path}`\n                      : 'https://via.placeholder.com/200x300'\n                  }\n                  width=\"200\"\n                  height=\"300\"\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </Link>\n            </CardWrapper>\n          ))}\n      </Container>\n      {!movies && (\n        <ErrorWraper>\n          <ErrorHeader>Sorry, no movies found.</ErrorHeader>\n          <ErrorText>Please try again later.</ErrorText>\n        </ErrorWraper>\n      )}\n    </Section>\n  );\n};\n\nexport default MovieList;\n","export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-bottom: 1rem;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n`;\n\nexport const HeroImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const HeroTitle = styled.h2`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 40%;\n  margin: 0;\n  padding-bottom: 60px;\n  color: ${props => props.theme.colors.white};\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0));\n  text-align: center;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  font-size: 3rem;\n  text-shadow: 2px 4px 0 ${props => props.theme.colors.accent};\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { Section, CardWrapper, HeroImage, HeroTitle } from './Hero.styled';\nimport { IMG_LARGE_URL } from 'constants/api';\n\nconst Hero = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <Section>\n      {movie && (\n        <>\n          <CardWrapper>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <HeroImage\n                src={\n                  movie.backdrop_path\n                    ? `${IMG_LARGE_URL}${movie.backdrop_path}`\n                    : 'https://via.placeholder.com/960x540'\n                }\n                width=\"960\"\n                height=\"540\"\n                alt={movie.title}\n              />\n              <HeroTitle>{movie.title}</HeroTitle>\n            </Link>\n          </CardWrapper>\n        </>\n      )}\n      {!movie && (\n        <CardWrapper>\n          <HeroImage\n            src=\"https://via.placeholder.com/960x540\"\n            width=\"960\"\n            height=\"540\"\n            alt=\"Get Movies?\"\n          />\n          <HeroTitle>Welcome to Get Movie App</HeroTitle>\n        </CardWrapper>\n      )}\n    </Section>\n  );\n};\n\nexport default Hero;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport MovieList from 'components/MoviesList';\nimport Hero from 'components/Hero';\n\nimport { getTrendMoviesOfDay, getTrendMoviesOfWeek } from 'services/fetchApi';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchDayMovies = async () => {\n      try {\n        const res = await getTrendMoviesOfDay();\n        setMovies(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchDayMovies();\n  }, []);\n\n  useEffect(() => {\n    const fetchWeekMovies = async () => {\n      try {\n        const res = await getTrendMoviesOfWeek();\n        setMovie(res);\n        console.log(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchWeekMovies();\n  }, []);\n\n  return (\n    <main>\n      <Hero movie={movie} location={location} />\n      <MovieList movies={movies} location={location} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day from TMDB API\nexport async function getTrendMoviesOfDay() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch trending movies of the week from TMDB API\nexport async function getTrendMoviesOfWeek() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details from TMDB API\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword from TMDB API\nexport async function searchMoviesByKeyword(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Section","styled","Container","CardWrapper","ImgPoster","MovieTitle","props","theme","colors","white","accent","ErrorWraper","ErrorHeader","ErrorText","light","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","IMG_MEDIUM_URL","width","height","alt","API_KEY","BASE_URL","IMG_SMALL_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","HeroImage","HeroTitle","movie","backdrop_path","useState","setMovies","setMovie","useEffect","fetchDayMovies","getTrendMoviesOfDay","res","console","log","message","fetchWeekMovies","getTrendMoviesOfWeek","axios","response","data","results","error","randomIndex","Math","floor","random","length","fetchMovieDetails","movieId","searchMoviesByKeyword","keyword","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}