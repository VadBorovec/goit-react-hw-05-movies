{"version":3,"file":"static/js/122.bbc9bfe8.chunk.js","mappings":"qQA0CA,EAtCgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEYC,EAAAA,EAAAA,IAAgBP,GAF5B,OAETQ,EAFS,OAGfJ,EAAWI,GACXC,QAAQC,IAAIF,GAJG,gDAMfC,QAAQE,MAAR,MANe,yDAAH,qDAUhBL,GACD,GAAE,CAACN,KAGF,8BACE,wBACGG,GACCA,EAAQS,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,IAApC,OACV,2BACE,wBAAKH,KACL,yBACE,cAAGI,KAAMD,EAAKE,OAAO,SAASC,IAAI,sBAAlC,SACGJ,OAGL,uBAAID,MAPGd,EADC,OAcrB,C,gOCxCM,IAAMoB,EAAU,mCACVC,EAAW,gCAEXC,EAAgB,mCAChBC,EAAiB,mCACjBC,EAAgB,uCAEhBC,EAAgB,qBAChBC,EAAiB,sBAGjBC,EAAmB,c,oOCDzB,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBR,EAAAA,IADkB,OACPI,EAAAA,GADO,oBACkBL,EAAAA,KAHtC,cAEGU,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHvB,QAAQE,MAAR,MAPG,gFAYA,SAAesB,IAAtB,+B,aAAO,O,oBAAA,iHAEoBJ,EAAAA,EAAAA,IAAA,UAClBR,EAAAA,IADkB,OACPK,EAAAA,GADO,oBACmBN,EAAAA,KAHvC,cAEGU,EAFH,OAKGI,EAASJ,EAASC,KAAKC,QACvBG,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,QANnD,kBAOIL,EAAOC,IAPX,gCASH1B,QAAQE,MAAR,MATG,gFAcA,SAAe6B,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,gGAEoBZ,EAAAA,EAAAA,IAAA,UAClBR,EAAAA,GADkB,iBACDoB,EADC,oBACkBrB,EAAAA,GADlB,oBAFpB,cAEGU,EAFH,yBAKIA,EAASC,MALb,gCAOHtB,QAAQE,MAAR,MAPG,gFAYA,SAAe+B,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,gGAEoBd,EAAAA,EAAAA,IAAA,UAClBR,EAAAA,IADkB,OACPM,EAAAA,GADO,oBACqBP,EAAAA,GADrB,kBACsCuB,IAH1D,cAEGb,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHvB,QAAQE,MAAR,MAPG,gFAWA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEoBZ,EAAAA,EAAAA,IAAA,UAClBR,EAAAA,GADkB,iBACDoB,EADC,4BAC0BrB,EAAAA,GAD1B,oBAFpB,cAEGU,EAFH,yBAKIA,EAASC,KAAKc,MALlB,uCAOHpC,QAAQE,MAAR,MAPG,kBAQI,IARJ,gFAYA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BkC,GAA/B,gGAEoBZ,EAAAA,EAAAA,IAAA,UAClBR,EAAAA,GADkB,iBACDoB,EADC,4BAC0BrB,EAAAA,GAD1B,2BAFpB,cAEGU,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHvB,QAAQE,MAAR,MAPG,gF","sources":["components/Reviews/Reviews.jsx","constants/api.js","services/fetchApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchApi';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(id);\n        setReviews(movieReviews);\n        console.log(movieReviews);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getReviews();\n  }, [id]);\n\n  return (\n    <section>\n      <ul>\n        {reviews &&\n          reviews.map(({ id, author, content, updated_at, url }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <h3>\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {updated_at}\n                </a>\n              </h3>\n              <p>{content}</p>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n","export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day from TMDB API\nexport async function getTrendMoviesOfDay() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch trending movies of the week from TMDB API\nexport async function getTrendMoviesOfWeek() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details from TMDB API\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword from TMDB API\nexport async function searchMoviesByKeyword(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","getReviews","getMovieReviews","movieReviews","console","log","error","map","author","content","updated_at","url","href","target","rel","API_KEY","BASE_URL","IMG_SMALL_URL","IMG_MEDIUM_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","getTrendMoviesOfDay","axios","response","data","results","getTrendMoviesOfWeek","movies","randomIndex","Math","floor","random","length","fetchMovieDetails","movieId","searchMoviesByKeyword","keyword","getMovieCredits","cast"],"sourceRoot":""}