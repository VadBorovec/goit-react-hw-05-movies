{"version":3,"file":"static/js/93.c937b2ad.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","constants/api.js","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, auto));\n  gap: 1rem;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 4px 8px 4px rgba(211, 47, 47, 0.5);\n    transform: translateY(-2px);\n  }\n`;\n\nexport const CastImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const CastTitle = styled.h3`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding-bottom: 0.8rem;\n  color: ${props => props.theme.colors.white};\n  text-shadow: 1px 2px 0 ${props => props.theme.colors.accent};\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0));\n  text-align: center;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n`;\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  padding: 2rem;\n`;\n\nexport const ErrorHeader = styled.h2`\n  color: ${props => props.theme.colors.white};\n  text-shadow: 2px 4px 0 ${props => props.theme.colors.accent};\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const ErrorText = styled.p`\n  color: ${props => props.theme.colors.light};\n  font-size: 1.2rem;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/fetchApi';\nimport { IMG_SMALL_URL } from 'constants/api';\nimport {\n  Section,\n  Container,\n  CardWrapper,\n  CastImage,\n  CastTitle,\n  ErrorWrapper,\n  ErrorHeader,\n  ErrorText,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const movieCast = await getMovieCredits(id);\n        setCast(movieCast);\n        // console.log(movieCast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getCast();\n  }, [id]);\n\n  return (\n    <Section>\n      <Container>\n        {cast &&\n          cast.map(\n            ({ cast_id, profile_path, original_name, name, character }) => (\n              <CardWrapper key={cast_id}>\n                <CastImage\n                  src={\n                    profile_path\n                      ? `${IMG_SMALL_URL}${profile_path}`\n                      : 'https://via.placeholder.com/200x300'\n                  }\n                  alt={original_name}\n                />\n                <CastTitle>\n                  {name} <br /> Character: {character}\n                </CastTitle>\n              </CardWrapper>\n            )\n          )}\n      </Container>\n      {cast.length < 1 && (\n        <ErrorWrapper>\n          <ErrorHeader>Sorry, no cast found.</ErrorHeader>\n          <ErrorText>Please try again later.</ErrorText>\n        </ErrorWrapper>\n      )}\n    </Section>\n  );\n};\n\nexport default Cast;\n","export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day\nexport async function getTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch random trending movie of the week\nexport async function getRandomMovie() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword\nexport async function searchMovies(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie credits\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n// Function to fetch movie reviews\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n"],"names":["Section","styled","Container","CardWrapper","CastImage","CastTitle","props","theme","colors","white","accent","ErrorWrapper","ErrorHeader","ErrorText","light","id","useParams","useState","cast","setCast","useEffect","getCast","getMovieCredits","movieCast","console","error","map","cast_id","profile_path","original_name","name","character","src","IMG_SMALL_URL","alt","length","API_KEY","BASE_URL","IMG_MEDIUM_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","getTrending","axios","response","data","results","getRandomMovie","movies","randomIndex","Math","floor","random","searchMovies","keyword","getMovieDetails","movieId","getMovieReviews"],"sourceRoot":""}