{"version":3,"file":"static/js/76.0e8c3359.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/api.js","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, auto));\n  gap: 1rem;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 4px 8px 4px rgba(211, 47, 47, 0.5);\n    transform: translateY(-2px);\n  }\n`;\n\nexport const ImgPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding-bottom: 0.8rem;\n  color: ${props => props.theme.colors.white};\n  text-shadow: 1px 2px 0 ${props => props.theme.colors.accent};\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0));\n  text-align: center;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n`;\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  padding: 2rem;\n`;\n\nexport const ErrorHeader = styled.h2`\n  color: ${props => props.theme.colors.white};\n  text-shadow: 2px 4px 0 ${props => props.theme.colors.accent};\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const ErrorText = styled.p`\n  color: ${props => props.theme.colors.light};\n  font-size: 1.2rem;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Section,\n  Container,\n  CardWrapper,\n  ImgPoster,\n  MovieTitle,\n  ErrorWrapper,\n  ErrorHeader,\n  ErrorText,\n} from './MoviesList.styled';\n\nimport { IMG_MEDIUM_URL } from 'constants/api';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Section>\n      <Container>\n        {movies &&\n          movies.map(({ id, poster_path, title }) => (\n            <CardWrapper key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <ImgPoster\n                  src={\n                    poster_path\n                      ? `${IMG_MEDIUM_URL}${poster_path}`\n                      : 'https://via.placeholder.com/200x300'\n                  }\n                  width=\"200\"\n                  height=\"300\"\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </Link>\n            </CardWrapper>\n          ))}\n      </Container>\n      {!movies && (\n        <ErrorWrapper>\n          <ErrorHeader>Sorry, no movies found.</ErrorHeader>\n          <ErrorText>Please try again later.</ErrorText>\n        </ErrorWrapper>\n      )}\n    </Section>\n  );\n};\n\nexport default MovieList;\n","export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 1rem;\n`;\n\nexport const FunnyMessage = styled.p`\n  margin-bottom: 1rem;\n  font-size: 1.6rem;\n  color: ${props => props.theme.colors.white};\n  text-shadow: 1px 2px 0 ${props => props.theme.colors.accent};\n  text-align: center;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  border-color: ${props => props.theme.colors.button};\n  font: inherit;\n  position: relative;\n\n  &::placeholder {\n    color: ${props => props.theme.colors.gray};\n  }\n`;\n\nexport const Icon = styled(HiSearch)`\n  fill: ${props => props.theme.colors.button};\n  width: 1.25rem;\n  height: 1.25rem;\n  position: absolute;\n  top: 50%;\n  right: 8px;\n  transform: translateY(-50%);\n  pointer-events: none;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  Wrapper,\n  FunnyMessage,\n  InputWrapper,\n  Input,\n  Icon,\n} from './SearchBox.styled';\n\nconst SearchBox = ({ value, onChange }) => {\n  const [randomFunnyMessage, setRandomFunnyMessage] = useState('');\n  const funnyMessages = [\n    'Searching for hilarious movies...',\n    `Lights, camera, action! Searching for movies with ${value}...`,\n    `Why did the movie go searching? To find its ${value}...!`,\n    'Ready to find the perfect movie?',\n    `In search of a blockbuster movie with ${value}...`,\n    'Searching for movies like a pro!',\n    'Searching for movies to make you laugh out loud!',\n  ];\n\n  useEffect(() => {\n    const randomIndex = Math.floor(Math.random() * funnyMessages.length);\n    setRandomFunnyMessage(funnyMessages[randomIndex]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Wrapper>\n      <FunnyMessage>{randomFunnyMessage}</FunnyMessage>\n      <InputWrapper>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          placeholder=\"just find it\"\n        />\n        <Icon />\n      </InputWrapper>\n    </Wrapper>\n  );\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MovieList from 'components/MoviesList';\nimport SearchBox from 'components/SearchBox';\n\nimport { searchMovies } from 'services/fetchApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieTitle = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const res = await searchMovies(movieTitle);\n        setMovies(res);\n        // console.log(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovies();\n  }, [movieTitle]);\n\n  const visibleMovies = movies.filter(movie =>\n    movie.title.toLowerCase().includes(movieTitle.toLowerCase())\n  );\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox value={movieTitle} onChange={updateQueryString} />\n      <MovieList movies={visibleMovies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day\nexport async function getTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch random trending movie of the week\nexport async function getRandomMovie() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword\nexport async function searchMovies(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie credits\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n// Function to fetch movie reviews\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n"],"names":["Section","styled","Container","CardWrapper","ImgPoster","MovieTitle","props","theme","colors","white","accent","ErrorWrapper","ErrorHeader","ErrorText","light","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","IMG_MEDIUM_URL","width","height","alt","API_KEY","BASE_URL","IMG_SMALL_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","Wrapper","FunnyMessage","InputWrapper","Input","button","gray","Icon","HiSearch","value","onChange","useState","randomFunnyMessage","setRandomFunnyMessage","funnyMessages","useEffect","randomIndex","Math","floor","random","length","type","e","target","placeholder","setMovies","useSearchParams","searchParams","setSearchParams","movieTitle","get","getMovies","searchMovies","res","console","log","message","visibleMovies","filter","movie","toLowerCase","includes","name","getTrending","axios","response","data","results","error","getRandomMovie","keyword","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}