{"version":3,"file":"static/js/978.6e6ee0a9.chunk.js","mappings":"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","sources":["constants/api.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n  padding: 0.5rem 0;\n  color: ${props => props.theme.colors.light};\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 1rem;\n\n  :hover {\n    color: ${props => props.theme.colors.button};\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-bottom: 1rem;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieWrapper = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  padding: 1rem;\n  color: ${props => props.theme.colors.light};\n  text-shadow: 1px 1px 0 ${props => props.theme.colors.accent};\n`;\n\nexport const MovieTitle = styled.h2`\n  text-shadow: 2px 3px 0 ${props => props.theme.colors.accent};\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const MovieGenres = styled.h3`\n  margin-bottom: 0.5rem;\n`;\n\nexport const MovieRating = styled.p`\n  font-weight: bold;\n  margin-bottom: 1rem;\n`;\n\nexport const MovieOverview = styled.p`\n  margin-bottom: 1.5rem;\n`;\n\nexport const InfoTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 1rem;\n  color: ${props => props.theme.colors.light};\n  text-shadow: 1px 1px 0 ${props => props.theme.colors.accent};\n`;\n\nexport const InfoList = styled.ul`\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 2rem;\n`;\n\nexport const InfoItem = styled.li`\n  padding-bottom: 1rem;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  text-decoration: none;\n  text-shadow: none;\n  font-weight: 500;\n\n  &.active {\n    color: ${props => props.theme.colors.dark};\n    background-color: ${props => props.theme.colors.button};\n  }\n`;\n\nexport const Loader = styled.div`\n  text-align: center;\n  padding: 0.8rem 0;\n  margin: 1rem 0;\n  font-size: 1.5rem;\n  color: ${props => props.theme.colors.light};\n  text-shadow: 1px 2px 0 ${props => props.theme.colors.accent};\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport BackLink from 'components/BackLink';\nimport {\n  Section,\n  MovieImg,\n  MovieWrapper,\n  MovieTitle,\n  MovieGenres,\n  MovieRating,\n  MovieOverview,\n  InfoList,\n  InfoTitle,\n  InfoItem,\n  Link,\n  Loader,\n} from './MovieDetails.styled';\n\nimport { getMovieDetails } from 'services/fetchApi';\nimport { IMG_LARGE_URL } from 'constants/api';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        setMovie(movieDetails);\n        // console.log(movieDetails);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getMovie();\n  }, [id]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      <Section>\n        {movie && (\n          <>\n            <MovieImg\n              src={\n                movie.backdrop_path\n                  ? `${IMG_LARGE_URL}${movie.backdrop_path}`\n                  : 'https://via.placeholder.com/960x540'\n              }\n              width=\"960\"\n              height=\"540\"\n              alt={movie.title}\n            />\n            <MovieWrapper>\n              <MovieTitle>{movie.title}</MovieTitle>\n              {movie.genres && (\n                <MovieGenres>\n                  Genres: {movie.genres.map(({ name }) => name).join(', ')}\n                </MovieGenres>\n              )}\n              <MovieRating>Rating: {movie.vote_average}</MovieRating>\n              <MovieOverview>{movie.overview}</MovieOverview>\n              <InfoTitle>Additional information</InfoTitle>\n              <InfoList>\n                <InfoItem>\n                  <Link to=\"cast\">Cast</Link>\n                </InfoItem>\n                <InfoItem>\n                  <Link to=\"reviews\">Reviews</Link>\n                </InfoItem>\n              </InfoList>\n            </MovieWrapper>\n          </>\n        )}\n        {!movie && <Loader>Loading...</Loader>}\n      </Section>\n      <Suspense fallback={<Loader>Loading subpage...</Loader>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day\nexport async function getTrending() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch random trending movie of the week\nexport async function getRandomMovie() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword\nexport async function searchMovies(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie credits\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n// Function to fetch movie reviews\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n"],"names":["API_KEY","BASE_URL","IMG_SMALL_URL","IMG_MEDIUM_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","StyledLink","styled","Link","props","theme","colors","light","button","to","children","size","Section","MovieImg","MovieWrapper","accent","MovieTitle","MovieGenres","MovieRating","MovieOverview","InfoTitle","InfoList","InfoItem","NavLink","dark","Loader","id","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovie","getMovieDetails","movieDetails","console","error","current","src","backdrop_path","width","height","alt","title","genres","map","name","join","vote_average","overview","Suspense","fallback","getTrending","axios","response","data","results","getRandomMovie","movies","randomIndex","Math","floor","random","length","searchMovies","keyword","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}