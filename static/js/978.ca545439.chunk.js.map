{"version":3,"file":"static/js/978.ca545439.chunk.js","mappings":"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","sources":["constants/api.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\n\nexport const ImgBgd = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport BackLink from 'components/BackLink';\nimport { ImgBgd } from './MovieDetails.styled';\n\nimport { fetchMovieDetails } from 'services/fetchApi';\nimport { IMG_LARGE_URL } from 'constants/api';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(id);\n        setMovie(movieDetails);\n        console.log(movieDetails);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <main>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      <ImgBgd\n        src={\n          movie.backdrop_path\n            ? `${IMG_LARGE_URL}${movie.backdrop_path}`\n            : 'https://via.placeholder.com/960x540'\n        }\n        width=\"960\"\n        height=\"540\"\n        alt={movie.title}\n      />\n      <div>\n        <h2>{movie.title}</h2>\n        <p>{movie.overview}</p>\n        <h2>Genres</h2>\n        {movie.genres && (\n          <p>{movie.genres.map(({ name }) => name).join(', ')}</p>\n        )}\n      </div>\n\n      <ul>\n        <h3>Additional information</h3>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day from TMDB API\nexport async function getTrendMoviesOfDay() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch trending movies of the week from TMDB API\nexport async function getTrendMoviesOfWeek() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details from TMDB API\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword from TMDB API\nexport async function searchMoviesByKeyword(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["API_KEY","BASE_URL","IMG_SMALL_URL","IMG_MEDIUM_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","StyledLink","styled","Link","to","children","size","ImgBgd","id","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovie","fetchMovieDetails","movieDetails","console","log","error","current","src","backdrop_path","width","height","alt","title","overview","genres","map","name","join","Suspense","fallback","getTrendMoviesOfDay","axios","response","data","results","getTrendMoviesOfWeek","movies","randomIndex","Math","floor","random","length","movieId","searchMoviesByKeyword","keyword","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}