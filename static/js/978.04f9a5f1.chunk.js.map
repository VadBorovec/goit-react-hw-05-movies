{"version":3,"file":"static/js/978.04f9a5f1.chunk.js","mappings":"gSAAO,IAAMA,EAAU,mCACVC,EAAW,gCACXC,EAAc,uCACdC,EAAiB,mCAEjBC,EAAgB,qBAIhBC,EAAmB,c,6KCNnBC,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iP,SCSvB,EATiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECRYE,EAASL,EAAAA,EAAAA,IAAH,+E,mBC2DnB,EApDqB,WAAO,IAAD,IACjBM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAe7C,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEYC,EAAAA,EAAAA,IAAkBX,GAF9B,OAETY,EAFS,OAGfR,EAASQ,GAHM,gDAKfC,QAAQC,MAAR,MALe,yDAAH,qDAShBJ,GACD,GAAE,CAACV,IAECG,GAQH,6BACE,SAAC,EAAD,CAAUP,GAAIS,EAAd,sBACA,SAACN,EAAD,CAAQgB,IAAG,UAAK1B,EAAAA,IAAL,OAAmBc,EAAMa,eAAiBC,IAAKd,EAAMe,SAChE,4BACE,wBAAKf,EAAMe,SACX,uBAAIf,EAAMgB,YACV,qCAAahB,EAAMiB,OAAOC,KAAK,aAGjC,2BACE,oDACA,yBACE,SAAC,KAAD,CAAMzB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAA0B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UA1BG,uCA8BV,C,4JCjDM,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBrC,EAAAA,IADkB,OACPG,EAAAA,GADO,oBACkBJ,EAAAA,KAHtC,cAEGuC,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHf,QAAQC,MAAR,MAPG,gFAwBA,SAAeH,EAAtB,kC,aAAO,O,oBAAA,WAAiCkB,GAAjC,gGAEoBJ,EAAAA,EAAAA,IAAA,UAClBrC,EAAAA,GADkB,iBACDyC,EADC,oBACkB1C,EAAAA,GADlB,oBAFpB,cAEGuC,EAFH,yBAKIA,EAASC,MALb,gCAOHd,QAAQC,MAAR,MAPG,gFAYA,SAAegB,EAAtB,kC,aAAO,O,oBAAA,WAAqCC,GAArC,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBrC,EAAAA,IADkB,OACPI,EAAAA,GADO,oBACqBL,EAAAA,GADrB,kBACsC4C,IAH1D,cAEGL,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHf,QAAQC,MAAR,MAPG,gF","sources":["constants/api.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_BGD_URL = 'https://image.tmdb.org/t/p/original/';\nexport const IMG_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\n\nexport const ImgBgd = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport BackLink from 'components/BackLink';\nimport { ImgBgd } from './MovieDetails.styled';\n\nimport { fetchMovieDetails } from 'services/fetchApi';\nimport { IMG_BGD_URL } from 'constants/api';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(id);\n        setMovie(movieDetails);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n  // const image = movie.backdrop_path\n  //   ? `${IMG_URL}${movie.backdrop_path}`\n  //   : `${IMG_URL}${movie.poster_path}`;\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <ImgBgd src={`${IMG_BGD_URL}${movie.backdrop_path}`} alt={movie.title} />\n      <div>\n        <h2>{movie.title}</h2>\n        <p>{movie.overview}</p>\n        <p>Genres - {movie.genres.join(', ')}</p>\n      </div>\n\n      <ul>\n        <h3>Additional information</h3>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day from TMDB API\nexport async function getTrendMoviesOfDay() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch trending movies of the week from TMDB API\nexport async function getTrendMoviesOfWeek() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details from TMDB API\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword from TMDB API\nexport async function searchMoviesByKeyword(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// export const MovieDatabaseAPI = () => {\n\n//   // Function to fetch detail info from TMDB API\n//   async fetchMovieDetails(movieId) {\n//     try {\n//       const response = await axios.get(\n//         `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n//       );\n//       return response.data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n// }\n"],"names":["API_KEY","BASE_URL","IMG_BGD_URL","IMG_POSTER_URL","URL_TREND_DAY","URL_SEARCH_MOVIE","StyledLink","styled","Link","to","children","size","ImgBgd","id","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovie","fetchMovieDetails","movieDetails","console","error","src","backdrop_path","alt","title","overview","genres","join","Suspense","fallback","getTrendMoviesOfDay","axios","response","data","results","movieId","searchMoviesByKeyword","keyword"],"sourceRoot":""}