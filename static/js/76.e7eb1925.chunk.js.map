{"version":3,"file":"static/js/76.e7eb1925.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/api.js","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ImgPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding-bottom: 10px;\n  color: white;\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0));\n  text-align: center;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  CardWrapper,\n  ImgPoster,\n  MovieTitle,\n} from './MoviesList.styled';\n\nimport { IMG_MEDIUM_URL } from 'constants/api';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <ImgPoster\n              src={\n                movie.poster_path\n                  ? `${IMG_MEDIUM_URL}${movie.poster_path}`\n                  : 'https://via.placeholder.com/200x300'\n              }\n              width=\"200\"\n              height=\"300\"\n              alt={movie.title}\n            />\n            <MovieTitle>{movie.title}</MovieTitle>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default MovieList;\n","export const API_KEY = 'e228a48ce493c266d1ac0e25cdb4d9c4';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMG_SMALL_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_MEDIUM_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const IMG_LARGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport const URL_TREND_DAY = 'trending/movie/day';\nexport const URL_TREND_WEEK = 'trending/movie/week';\nexport const URL_GENRE_LIST = 'genre/movie/list';\nexport const URL_COUNTRY_LIST = 'configuration/countries';\nexport const URL_SEARCH_MOVIE = 'search/movie';\n","import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MovieList from 'components/MoviesList';\nimport SearchBox from 'components/SearchBox';\n\nimport { searchMoviesByKeyword } from 'services/fetchApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieTitle = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const res = await searchMoviesByKeyword(movieTitle); // Pass movieTitle as argument to searchMoviesByKeyword\n        setMovies(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovies();\n  }, [movieTitle]); // Add movieTitle to dependency array\n\n  const visibleMovies = movies.filter(movie =>\n    movie.title.toLowerCase().includes(movieTitle.toLowerCase())\n  );\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox value={movieTitle} onChange={updateQueryString} />\n      <MovieList movies={visibleMovies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport {\n  API_KEY,\n  BASE_URL,\n  URL_TREND_DAY,\n  URL_TREND_WEEK,\n  URL_SEARCH_MOVIE,\n} from 'constants/api';\n\n// Function to fetch trending movies of the day from TMDB API\nexport async function getTrendMoviesOfDay() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_DAY}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch trending movies of the week from TMDB API\nexport async function getTrendMoviesOfWeek() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_TREND_WEEK}?api_key=${API_KEY}`\n    );\n    const movies = response.data.results;\n    const randomIndex = Math.floor(Math.random() * movies.length);\n    return movies[randomIndex];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to fetch movie details from TMDB API\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Function to search movies by keyword from TMDB API\nexport async function searchMoviesByKeyword(keyword) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${URL_SEARCH_MOVIE}?api_key=${API_KEY}&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Container","styled","CardWrapper","ImgPoster","MovieTitle","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","IMG_MEDIUM_URL","width","height","alt","title","API_KEY","BASE_URL","IMG_SMALL_URL","IMG_LARGE_URL","URL_TREND_DAY","URL_TREND_WEEK","URL_SEARCH_MOVIE","Wrapper","Input","Icon","HiSearch","value","onChange","type","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieTitle","get","useEffect","fetchMovies","searchMoviesByKeyword","res","console","log","message","visibleMovies","filter","toLowerCase","includes","name","getTrendMoviesOfDay","axios","response","data","results","error","getTrendMoviesOfWeek","randomIndex","Math","floor","random","length","fetchMovieDetails","movieId","keyword","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}